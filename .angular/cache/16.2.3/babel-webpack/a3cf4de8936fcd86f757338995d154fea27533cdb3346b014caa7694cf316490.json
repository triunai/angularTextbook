{"ast":null,"code":"var _class;\nimport { products } from '../products';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction ProductDetailsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"h4\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.product.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, ctx_r0.product.price));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.product.description);\n  }\n}\nexport class ProductDetailsComponent {\n  constructor(route, router) {\n    this.route = route;\n    this.router = router;\n  }\n  ngOnInit() {\n    // First get the product id from the current route.\n    const routeParams = this.route.snapshot.paramMap;\n    const productIdFromRoute = Number(routeParams.get('productId'));\n    // Find the product that correspond with the id provided in route.\n    this.product = products.find(product => product.id === productIdFromRoute);\n    if (!this.product) {\n      console.error(\"Product not found for productId: \", productIdFromRoute);\n      this.router.navigate(['/products']);\n    }\n  }\n}\n_class = ProductDetailsComponent;\n_class.ɵfac = function ProductDetailsComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-product-details\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[4, \"ngIf\"]],\n  template: function ProductDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Product Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ProductDetailsComponent_div_2_Template, 8, 5, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.product);\n    }\n  },\n  dependencies: [i2.NgIf, i2.CurrencyPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["products","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","product","name","ɵɵpipeBind1","price","description","ProductDetailsComponent","constructor","route","router","ngOnInit","routeParams","snapshot","paramMap","productIdFromRoute","Number","get","find","id","console","error","navigate","ɵɵdirectiveInject","i1","ActivatedRoute","Router","selectors","decls","vars","consts","template","ProductDetailsComponent_Template","rf","ctx","ɵɵtemplate","ProductDetailsComponent_div_2_Template","ɵɵproperty"],"sources":["C:\\Users\\Khumeren\\Desktop\\completedHobbyProjects\\angularTextbook\\angularTextbook\\src\\app\\product-details\\product-details.component.ts","C:\\Users\\Khumeren\\Desktop\\completedHobbyProjects\\angularTextbook\\angularTextbook\\src\\app\\product-details\\product-details.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\n\r\n\r\nimport { Product, products } from '../products';\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.css']\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n  product: Product | undefined;\r\n  constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n\r\n  ngOnInit() {\r\n    // First get the product id from the current route.\r\n    const routeParams = this.route.snapshot.paramMap;\r\n    const productIdFromRoute = Number(routeParams.get('productId'));\r\n  \r\n    // Find the product that correspond with the id provided in route.\r\n    this.product = products.find(product => product.id === productIdFromRoute);\r\n\r\n    if(!this.product) {\r\n      console.error(\"Product not found for productId: \",productIdFromRoute);\r\n      this.router.navigate(['/products']);\r\n  }\r\n\r\n}\r\n}\r\n","<h2>Product Details</h2>\r\n\r\n<div *ngIf=\"product\">\r\n    <h3>{{ product.name }}</h3>\r\n    <h4>{{ product.price | currency }}</h4>\r\n    <p>{{ product.description }}</p>\r\n</div>"],"mappings":";AAIA,SAAkBA,QAAQ,QAAQ,aAAa;;;;;;ICF/CC,EAAA,CAAAC,cAAA,UAAqB;IACbD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC3BH,EAAA,CAAAC,cAAA,SAAI;IAAAD,EAAA,CAAAE,MAAA,GAA8B;;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACvCH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAF5BH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,OAAA,CAAAC,IAAA,CAAkB;IAClBR,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAK,iBAAA,CAAAL,EAAA,CAAAS,WAAA,OAAAH,MAAA,CAAAC,OAAA,CAAAG,KAAA,EAA8B;IAC/BV,EAAA,CAAAI,SAAA,GAAyB;IAAzBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,OAAA,CAAAI,WAAA,CAAyB;;;ADMhC,OAAM,MAAOC,uBAAuB;EAGlCC,YAAoBC,KAAqB,EAAUC,MAAc;IAA7C,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAY;EAGrEC,QAAQA,CAAA;IACN;IACA,MAAMC,WAAW,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ;IAChD,MAAMC,kBAAkB,GAAGC,MAAM,CAACJ,WAAW,CAACK,GAAG,CAAC,WAAW,CAAC,CAAC;IAE/D;IACA,IAAI,CAACf,OAAO,GAAGR,QAAQ,CAACwB,IAAI,CAAChB,OAAO,IAAIA,OAAO,CAACiB,EAAE,KAAKJ,kBAAkB,CAAC;IAE1E,IAAG,CAAC,IAAI,CAACb,OAAO,EAAE;MAChBkB,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAACN,kBAAkB,CAAC;MACrE,IAAI,CAACL,MAAM,CAACY,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;;EAGzC;;SAnBaf,uBAAuB;;mBAAvBA,MAAuB,EAAAZ,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA9B,EAAA,CAAA4B,iBAAA,CAAAC,EAAA,CAAAE,MAAA;AAAA;;QAAvBnB,MAAuB;EAAAoB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXpCtC,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,sBAAe;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAExBH,EAAA,CAAAwC,UAAA,IAAAC,sCAAA,iBAIM;;;MAJAzC,EAAA,CAAAI,SAAA,GAAa;MAAbJ,EAAA,CAAA0C,UAAA,SAAAH,GAAA,CAAAhC,OAAA,CAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}